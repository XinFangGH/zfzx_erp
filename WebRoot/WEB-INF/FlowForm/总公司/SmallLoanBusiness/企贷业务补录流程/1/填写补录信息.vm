DiligenceForm = Ext.extend(Ext.Panel, {
	formPanel : null,
	topbar : null,
	projectId : '$!projectId',
	oppositeType : '$!oppositeType',
	businessType : '$!businessType',
	operationType:'$!operationType',
	productId : '$!productId',
	fundProjectId : '$!fundProjectId',
	safeLevel : 1,
	closesave : true,
	constructor : function(_cfg) {
		if (_cfg == null) {
			_cfg = {};
		}
		Ext.applyIf(this, _cfg);
		this.initComponents();
		DiligenceForm.superclass.constructor.call(this, {
			iconCls : 'menu-profile-create',
			border : false
		});
		
	},
	initComponents : function() {
			var jsArr = [__ctxPath + '/js/commonFlow/ExtUD.Ext.js',//客户信息 项目基本信息
			    __ctxPath + '/js/creditFlow/smallLoan/project/loadDataCommon.js',// 加载数据JS
				__ctxPath + '/js/selector/UserDialog.js',
				__ctxPath + '/js/creditFlow/common/EnterpriseShareequity.js',//股东信息
				__ctxPath + '/js/creditFlow/guarantee/materials/SlEnterPriseProcreditMaterialsView.js',
				__ctxPath + '/js/creditFlow/assuretenet/SlProcreditAssuretenetedForm.js',// 贷款准入原则
				 __ctxPath + '/js/creditFlow/report/SlReportView.js',
			     __ctxPath + '/js/creditFlow/report/SlRiskReportView.js',
				__ctxPath + '/js/creditFlow/finance/FundIntent_formulate_editGrid.js',
				__ctxPath + '/js/creditFlow/finance/calculateFundIntent.js',
				__ctxPath + '/js/creditFlow/finance/calulateFinancePanel.js',
				__ctxPath + '/js/creditFlow/finance/caluateIntentGrid.js',
				__ctxPath + '/js/creditFlow/finance/calulateloadDataCommon.js',
				__ctxPath + '/js/creditFlow/finance/SlActualToCharge.js',
				__ctxPath + '/js/creditFlow/mortgage/AddDzyMortgageWin.js',
				__ctxPath + '/js/creditFlow/mortgage/business/BusinessForm.js',
				__ctxPath + '/js/creditFlow/smallLoan/finance/BorrowerInfo.js',
				__ctxPath + '/js/creditFlow/customer/dictionary/dictionaryNotLastNodeTree.js',
				__ctxPath + '/js/commonFlow/NewProjectForm.js',
				__ctxPath + '/js/creditFlow/finance/OwnFundIntentView.js',
				 __ctxPath + '/js/creditFlow/archives/PlArchivesMaterialsView.js',
				__ctxPath+'/js/creditFlow/repaymentSource/RepaymentSource.js' //第一还款来源
		];
		$ImportSimpleJs(jsArr, this.constructPanel, this);
	},
	constructPanel : function() {
	
		this.SlProcreditMaterialsView = new SlEnterPriseProcreditMaterialsView(
		{
			projectId : this.projectId,
			businessType : this.businessType,
			isHidden:false,
			isHidden_materials : true,
			operationType : "SmallLoanBusiness"
		});
		this.projectInfo = new ExtUD.Ext.McroLoanProjectInfoPanel({
			isDiligenceReadOnly : false
		});
		this.projectInfoFinance= new ExtUD.Ext.newProjectInfoFinancePanel({
			isDiligenceReadOnly : true,
			projectId : this.projectId,
			isStartDateReadOnly:false,
			idDefinition : 'Smallliucheng'+this.taskId ,
			isHiddencalculateBtn : false,
			isHiddenbackBtn : false ,
			isHiddenParams : true
		});
	
			     this.perMain = new ExtUD.Ext.PeerMainInfoPanel({
				 projectId : this.projectId,
				 bussinessType:this.businessType,
				 isAllReadOnly : false,
				 isNameReadOnly:false,
				 isHidden : false,
				 isEditEnterprise : true
			});
		
		this.SlReportView = new SlReportView({
			projectId : this.projectId,
			businessType : 'SmallLoan',
	    	isHidden_report : false
		});
		this.repaymentSource=new RepaymentSource({
			isHiddenAddBtn : false,
			isHiddenDelBtn : false,
		    projectId:this.projectId
		})

		this.slActualToCharge = new SlActualToCharge({
			projId : this.projectId,
			businessType :'SmallLoan',
			productId : this.productId//小贷
			
		});
		
		this.borrowerInfo=new BorrowerInfo({
			projectId : this.projectId,
			isHidden : false,
			isHiddenAddBtn : false,
			isHiddenDelBtn:false
		});
		this.SlProcreditAssuretenetForm = new SlProcreditAssuretenetedForm({
		   projectId : this.projectId,
		   businessType:this.businessType,
		   isEditBbusinessmanageropinion:true,
		   isEditRiskmanageropinion:false,
		   isEditRiskmanagercombox:true
	    });
	    this.PlArchivesMaterialsView = new PlArchivesMaterialsView({
			projectId : this.projectId,
			businessType : this.businessType,
			operationType : this.operationType,
			isHiddenAffrim : false,
			isHiddenRecive : true,
			isHidden_materials : false,
			isHiddenType : false,
			isAffrimEdit : true
		});
		this.gridPanel = new OwnFundIntentView({
			projectId : this.projectId,
			preceptId:this.fundProjectId,
			object : this.projectInfoFinance,
			isHiddenAddBtn:false,
			isHiddenDelBtn:false,
			isHiddenExcel:false,
			isHiddenResBtn1:true,
			isHiddenseeqlideBtn:true,
			isHiddenseesumqlideBtn:true,
			isFastOr:true,
			businessType : 'SmallLoan'
		});
		this.SlRiskReportView = new SlRiskReportView({
			projectId : this.projectId,
			businessType : 'SmallLoan',
			isHidden_riskReport:false
		});
		this.slContractView=new SlContractView({
				    projectId:this.fundProjectId,
				    isHiddenAddBtn : false,
				    isHiddenDelBtn : false,
				    isHiddenEdiBtn : false,
				    contractUploadHidden:true,
				    isSignHidden:true,
				    isHiddenAffrim:true,
				     isHiddenToFtp:true,
				    isHidden:true,
			    	htType : 'loanContract',
			    	HTLX : 'loanContract',
			    	 projectNumber:this.projectNumber,
				    businessType : this.businessType,
				     sprojectId:this.projectId,
				    isqsEdit:false,
				    isHiddenTbar:false
				 });
		this.formPanel = new Ext.Panel({
			modal : true,
			labelWidth : 100,
			buttonAlign : 'center',
			layout : 'form',
			border : false,
			defaults : {
				anchor : '100%',
				xtype : 'fieldset',
				labelAlign : 'left',
				collapsible : true,
				autoHeight : true
			},
			items : [{
				xtype : 'hidden',
				name : 'preHandler',
				value : 'slSmallloanProjectService.saveEntHistorySmallProjectInfoNextStep'
			}, {
				xtype : 'hidden',
				name : 'gudongInfo'
			}, {
				name : 'slActualToChargeJsonData',
				xtype : 'hidden'
			}, {
				name : 'repaymentSource',
				xtype : 'hidden'
			}, {
				name : 'borrowerInfo',
				xtype : 'hidden'
			}, {
				xtype : 'hidden',
				name : 'fundIntentJsonData'
			},{
				xtype : 'hidden',
				name : 'fundProjectId',
				value : this.fundProjectId
			},{
				xtype : 'fieldset',
				name:'projectInfo',
				title : '项目基本信息 ',
				collapsible : true,
				autoHeight : true,
				labelAlign : 'right',
				collapsed : true,
				items : [this.projectInfo]
			}, {
				xtype : 'fieldset',
				title :'企业客户信息',
				bodyStyle : 'padding-left:0px',
				collapsible : true,
				labelAlign : 'right',
				autoHeight : true,
				collapsed : true,
				items : [this.perMain]
			}, {       
			    xtype : 'fieldset',
				title : '贷款基本信息',
				bodyStyle : 'padding-left:0px',
				collapsible : true,
				labelAlign : 'right',
				name:'financeInfoFieldset',
				autoHeight : true,
				collapsed : true,
				items : [
					this.projectInfoFinance,
					this.gridPanel,
					this.slActualToCharge
				]
			}, {       
			    xtype : 'fieldset',
				title : '第一还款来源',
				bodyStyle : 'padding-left:0px',
				collapsible : true,
				labelAlign : 'right',
				autoHeight : true,
				collapsed : true,
				items : [
					this.repaymentSource
				]
			},{
				xtype : 'fieldset',
				title : '共同借款人信息',
				bodyStyle : 'padding-left:0px',
				collapsible : true,
				labelAlign : 'right',
				autoHeight : true,
				collapsed : true,
				items : [this.borrowerInfo]
			},{
				xtype : 'fieldset',
				title : '担保措施',
				collapsible : true,
				autoHeight : true,
				collapsed : true,
				items : [
					new DZYMortgageView({
						projectId : this.projectId,
						titleText : '抵质押担保',
						businessType : '$!businessType',
						isHiddenAddContractBtn:true,
						isHiddenDelContractBtn:true,
						isHiddenEdiContractBtn:true,
						isHiddenRelieve:true,
						isRecieveHidden:true,
						isgdHidden:true,
						isblHidden:false,
						isblEdit:true,
						isBl:true,
						formPanel:this.projectInfoFinance
					}),
					new BaozMortgageView({
						projectId : this.projectId,
						titleText : '保证担保',
						businessType : '$!businessType',
						isHiddenAddContractBtn:true,
						isHiddenDelContractBtn:true,
						isHiddenEdiContractBtn:true,
						isHiddenRelieve:true,
						isRecieveHidden:true,
						isblHidden:false,
						isblEdit:true,
						isBl:true,
						isgdHidden:true
					})
					]
			},{
				xtype : 'fieldset',
				title :'贷款合同',
				bodyStyle : 'padding-left:0px',
				collapsible : true,
				labelAlign : 'right',
				autoHeight : true,
				collapsed : true,
				name : 'contractView',
				items : [this.slContractView]
			},{
				xtype : 'fieldset',
				title :'贷款必备条件',
				bodyStyle : 'padding-left:0px',
				collapsible : true,
				labelAlign : 'right',
				autoHeight : true,
				collapsed : true,
				items : [this.SlProcreditAssuretenetForm]
			}, {
				xtype : 'fieldset',
				title : '贷款资料清单',
				collapsible : true,
				autoHeight : true,
				bodyStyle : 'padding-left: 0px',
				items : [this.SlProcreditMaterialsView]

			}, {
				xtype : 'fieldset',
				collapsible : true,
				autoHeight : true,
				title : '调查报告',
				collapsed : true,
				items : [this.SlReportView]
			}, {
				xtype : 'fieldset',
				collapsible : true,
				autoHeight : true,
				title : '风控初审报告',
				collapsed : true,
				items : [this.SlRiskReportView]
			},{
				xtype : 'fieldset',
				title : '归档材料清单',
				collapsible : true,
				autoHeight : true,
				items : [this.PlArchivesMaterialsView]
			},{
				xtype : 'hidden',
        		name : 'safeLevel',
        		value : 1
			},{
			     xtype:'hidden',
			     name:'task_id',
			     value:this.taskId
	        }]
		})
		this.loadData({
			url : __ctxPath + '/project/getEntSmallProjectInfoSlSmallloanProject.do?slProjectId='+this.projectId+'&slTaskId='+this.taskId,
			method : "POST",
			preName : ['enterprise',  'slSmallloanProject',"businessType","enterpriseBank"],
			root : 'data',
			success : function(response, options) {
				var respText = response.responseText;
				var alarm_fields = Ext.util.JSON.decode(respText);
				expandFieldSet(this.formPanel)
				if(alarm_fields.data.comments){
				    this.ownerCt.ownerCt.getCmpByName('comments').setValue(alarm_fields.data.comments);
				}
				if(typeof(alarm_fields.data.enterpriseBank) != 'undefined'&&this.getCmpByName('enterpriseBank.areaName')!=null) {
					this.getCmpByName('enterpriseBank.areaName').setValue(alarm_fields.data.enterpriseBank.areaName);
				}
				this.getCmpByName('projectMoney1').setValue(Ext.util.Format.number(alarm_fields.data.slSmallloanProject.projectMoney,'0,000.00'));
				fillData(this,alarm_fields,'Smallliucheng'+this.taskId);
			}
		});

		this.add(this.formPanel);
		this.doLayout();
		this.formPanel.on('render', this.onGetTaskInfo.call(this,this.taskId));
	
	},
	onGetTaskInfo : function(taskId){
		Ext.Ajax.request({
			url : __ctxPath + "/creditFlow/getTaskInfoCreditProject.do",
			method : 'POST',
			scope:this,
			success : function(response, request) {
				obj = Ext.util.JSON.decode(response.responseText);
				var projectName = obj.data.projectName;
				var createTime = obj.data.createTime;
				var dueTime = obj.data.dueTime;
				var creator = obj.data.creator;
				if(obj.success==true){
					this.ownerCt.ownerCt.getCmpByName('commentsRecords').setTitle('任务处理历史【任务分配时间：'+createTime+'&nbsp;&nbsp;任务完成时限：'+dueTime+'&nbsp;&nbsp;当前处理人：'+creator+'】');
				}else{
					Ext.ux.Toast.msg('操作信息', '查询任务完成时限操作失败!');
				}
			},
			failure : function(response,request) {
				Ext.ux.Toast.msg('操作信息', '查询任务完成时限操作失败!');
			},
			params : {
				taskId : taskId,
				businessType : '$!businessType',
				projectId:'$!projectId'
			}
		});
	},
	saveBusDatas : function(formPanel,fun) {
				if(this.getCmpByName('person.cardtype').getValue()==309){
					if(validateIdCard(this.getCmpByName('person.cardnumber').getValue())==1){
						Ext.Msg.alert('身份证号码验证','证件号码不正确,请仔细核对')
						return;
					}else if(validateIdCard(this.getCmpByName('person.cardnumber').getValue())==2){
						Ext.Msg.alert('身份证号码验证','证件号码地区不正确,请仔细核对')
						return;
					}else if(validateIdCard(this.getCmpByName('person.cardnumber').getValue())==3){
						Ext.Msg.alert('身份证号码验证','证件号码生日日期不正确,请仔细核对')
						return;
					}
				}
				var vDates="";
		       
				var slActualToChargeJsonData=this.slActualToCharge.getGridDate();
				
				var borrowerInfo=getBorrowerInfoData(this.borrowerInfo.get(0));
				
				var borrowerInfoGrid=this.borrowerInfo.get(0);
			
			    var slActualToCharge=this.slActualToCharge;
		        var oppType=this.oppositeType;
		        var enterpriseBank=this.getCmpByName("enterpriseBank.id");
		        if(this.oppositeType=="company_customer")
		        {
		           var eg=this.perMain.getCmpByName('gudong_store').get(0).get(1);
		           vDates=getGridDate(eg);
		           if(vDates!=""){
		              var arrStr=vDates.split("@");
					  for(var i=0;i<arrStr.length;i++){
						  var str=arrStr[i];
						  var object = Ext.util.JSON.decode(str)
						 if(object.personid==""){
							 Ext.ux.Toast.msg('操作信息','股东名称不能为空，请选择股东名称');
							 return;
						 }
						  if(object.shareholdertype==""){
								 Ext.ux.Toast.msg('操作信息','股东类别不能为空，请选择股东类别');
								 return;
							 }
					  }
				  }
		        }
		        var repaymentSource = getSourceGridDate(this.repaymentSource.get(0));
		       
		        var breachRate= this.getCmpByName('slSmallloanProject.breachRate');
		        if(breachRate.getValue()=="") {
		        	breachRate.setValue(0);
		        }
		        formPanel.getCmpByName('slActualToChargeJsonData').setValue(slActualToChargeJsonData)
		         formPanel.getCmpByName('repaymentSource').setValue(repaymentSource)
		        formPanel.getCmpByName('gudongInfo').setValue(vDates)
		        formPanel.getCmpByName('borrowerInfo').setValue(borrowerInfo);
		        formPanel.getCmpByName('fundIntentJsonData').setValue(this.gridPanel.getGridDate());
				var gridPanel=this.gridPanel
				formPanel.getForm().submit({
				    clientValidation: false, 
					url : __ctxPath + '/project/saveEntHistorySmallProjectInfoSlSmallloanProject.do',
					params : {
						'comments':formPanel.comments
					},
					method : 'post',
					waitMsg : '数据正在提交，请稍后...',
					scope: this,
					success : function(fp, action) {
						var object = Ext.util.JSON.decode(action.response.responseText)
						this.repaymentSource.grid_RepaymentSource.getStore().reload();
						Ext.ux.Toast.msg('操作信息', '保存信息成功!');
						if(oppType=="company_customer"){
						   eg.getStore().reload();
						}
						enterpriseBank.setValue(object.enterpriseBankId);
						borrowerInfoGrid.getStore().reload();
						slActualToCharge.savereload();
						gridPanel.save()
					 	if(fun){
							fun.call( this.ownerCt.ownerCt)
						}
					},
					failure : function(fp, action) {
						Ext.MessageBox.show({
							title : '操作信息',
							msg : '信息保存出错，请联系管理员！',
							buttons : Ext.MessageBox.OK,
							icon : 'ext-mb-error'
						});
					}
				});
	},

	validate : function(outpanel) {
	   	if(this.getCmpByName('person.cardtype').getValue()==309){
					if(validateIdCard(this.getCmpByName('person.cardnumber').getValue())==1){
						Ext.Msg.alert('身份证号码验证','证件号码不正确,请仔细核对')
						return;
					}else if(validateIdCard(this.getCmpByName('person.cardnumber').getValue())==2){
						Ext.Msg.alert('身份证号码验证','证件号码地区不正确,请仔细核对')
						return;
					}else if(validateIdCard(this.getCmpByName('person.cardnumber').getValue())==3){
						Ext.Msg.alert('身份证号码验证','证件号码生日日期不正确,请仔细核对')
						return;
					}
				}
				var vDates="";
		       
				var slActualToChargeJsonData=this.slActualToCharge.getGridDate();
				
				var borrowerInfo=getBorrowerInfoData(this.borrowerInfo.get(0));
				
				var borrowerInfoGrid=this.borrowerInfo.get(0);
			
			    var slActualToCharge=this.slActualToCharge;
		        var oppType=this.oppositeType;
		        var enterpriseBank=this.getCmpByName("enterpriseBank.id");
		        if(this.oppositeType=="company_customer")
		        {
		           var eg=this.perMain.getCmpByName('gudong_store').get(0).get(1);
		           vDates=getGridDate(eg);
		           if(vDates!=""){
		              var arrStr=vDates.split("@");
					  for(var i=0;i<arrStr.length;i++){
						  var str=arrStr[i];
						  var object = Ext.util.JSON.decode(str)
						 if(object.personid==""){
							 Ext.ux.Toast.msg('操作信息','股东名称不能为空，请选择股东名称');
							 return;
						 }
						  if(object.shareholdertype==""){
								 Ext.ux.Toast.msg('操作信息','股东类别不能为空，请选择股东类别');
								 return;
							 }
					  }
				  }
		        }
		        var repaymentSource = getSourceGridDate(this.repaymentSource.get(0));
		       
		        var breachRate= this.getCmpByName('slSmallloanProject.breachRate');
		        if(breachRate.getValue()=="") {
		        	breachRate.setValue(0);
		        }
		        outpanel.getCmpByName('slActualToChargeJsonData').setValue(slActualToChargeJsonData)
		         outpanel.getCmpByName('repaymentSource').setValue(repaymentSource)
		        outpanel.getCmpByName('gudongInfo').setValue(vDates)
		        outpanel.getCmpByName('borrowerInfo').setValue(borrowerInfo);
		        this.getCmpByName('fundIntentJsonData').setValue(this.gridPanel.getGridDate());
		        return true;
	}
})
